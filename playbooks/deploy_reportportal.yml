- name: Deploy ReportPortal Stack
  hosts: all
  become: true
  vars:
    ansible_ssh_user: qcify
    ansible_ssh_pass: 1
    qcify_home: "{{ ansible_env.HOME }}"
  tasks:
    - name: Copy required files to the remote host
      ansible.builtin.copy:
        src: "{{ lookup('env', 'HOME') }}/qcify/test_dashboard/reportportal"
        dest: "{{ qcify_home }}/test_dashboard/"
      with_items:
        - docker-compose.yml
        - .env
        - .env.properties
        - .env.properties.local
        - .env.properties.uat
        - .env.properties.prod

    - name: Ensure Docker Compose is installed
      command: docker-compose --version
      register: docker_compose_version
      ignore_errors: true
      failed_when: docker_compose_version.rc != 0
    - name: Install Docker Compose
      ansible.builtin.apt:
        name: docker-compose
        state: present

    - name: Pull ReportPortal Docker Images
      command: docker-compose -f docker-compose.yml pull
      args:
        chdir: "{{ qcify_home }}/test_dashboard/reportportal"

    - name: Start ReportPortal Stack
      command: docker-compose -f docker-compose.yml up -d
      args:
        chdir: "{{ qcify_home }}/test_dashboard/reportportal"
      
    - name: Retrieve UI API Key
      uri:
        url: "http://localhost:8080/uat/sso/oauth/token"
        method: POST
        headers:
          Content-Type: "application/x-www-form-urlencoded"
        url_username: "ui"
        url_password: "uiman"
        body: "grant_type=password&username=default&password=1q2w3e"
        return_content: yes
      register: api_key_response
      delegate_to: localhost

    - name: debug API key
      debug:
        var: api_key_response

    - name: Retrieve API Token
      uri:
        url: "http://localhost:8080/uat/sso/me/apitoken"
        method: POST
        headers:
          Authorization: "Bearer {{ api_key_response.json.access_token }}"
        return_content: yes
      register: api_token_response
      delegate_to: localhost

    - name: Create User 'qcify'
      uri:
        url: "http://localhost:8080/api/v1/user"
        method: POST
        body_format: json
        body:
          login: "qcify"
          password: "1"
        headers:
          Authorization: "bearer {{ api_key_response.json.access_token }}"
      delegate_to: localhost

    - name: Grant Privileges to 'qcify'
      # Additional tasks to assign roles or permissions to the 'qcify' user
      # Example: Assigning a role to the user
      uri:
        url: "http://localhost:8080/api/v1/assignRole"
        method: POST
        body_format: json
        body:
          userId: "{{ qcify_user_id }}"
          roleId: "{{ role_id }}"
        headers:
          Authorization: "bearer {{ api_key_response.json.access_token }}"
      delegate_to: localhost
